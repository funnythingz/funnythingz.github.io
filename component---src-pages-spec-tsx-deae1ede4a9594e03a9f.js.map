{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/index-summary.tsx","webpack://gatsby-starter-default/./src/pages/imgs/spec.jpg","webpack://gatsby-starter-default/./src/pages/spec.tsx"],"names":["IndexSummary","data","allMarkdownRemark","group","sort","a","b","totalCount","map","tag","edges","key","style","fontSize","margin","display","flexWrap","justifyContent","node","frontmatter","slug","width","Link","to","textDecoration","cover","G","image","childImageSharp","gatsbyImageData","borderRadius","verticalAlign","alt","color","lineHeight","title","dateTime","date","defaultProps","path","visual","Visual","className","textAlign","src"],"mappings":"uKAKMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnB,gCACGA,EAAKC,kBAAkBC,MAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,cAAYC,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OAC5E,2BAASC,IAAKF,GACZ,sBAAIG,MAAO,CACTC,SAAS,SACTC,OAAO,kBACLL,GACJ,2BAASG,MAAO,CACdG,QAAQ,OACRC,SAAS,OACTC,eAAe,eAEdP,EAAMF,KAAI,gBAAGU,EAAH,EAAGA,KAAH,OACT,2BAASP,IAAKO,EAAKC,YAAYC,MAC7B,uBAAKR,MAAO,CACVS,MAAM,QACNP,OAAO,qBAEP,gBAAC,EAAAQ,KAAD,CAAMC,GAAIL,EAAKC,YAAYC,KAAMR,MAAO,CACtCG,QAAQ,eACRS,eAAe,OACfV,OAAO,aAEP,0BAAQF,MAAO,CACbE,OAAO,eAENI,EAAKC,YAAYM,OAChB,gBAAC,EAAAC,EAAD,CAAaC,MAAOT,EAAKC,YAAYM,MAAMG,gBAAgBC,gBAAiBjB,MAAO,CACjFkB,aAAa,MACbC,cAAc,UACbC,IAAI,MAGX,sBAAIpB,MAAO,CACTqB,MAAM,OACNpB,SAAS,SACTqB,WAAW,SACXpB,OAAQ,IAEPI,EAAKC,YAAYgB,OAEpB,wBAAMC,SAAUlB,EAAKC,YAAYkB,KAAMzB,MAAO,CAC5CC,SAAS,SACToB,MAAM,SACJf,EAAKC,YAAYkB,mBAevCrC,EAAasC,aAAe,CAC1BrC,KAAM,IAGR,O,iHCrEA,EAAe,IAA0B,mD,UCsBzC,EAd6C,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,EAASsC,KAAT,OAC3C,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKJ,MAAM,eAAeK,OAAQC,IAClC,sBAAIC,UAAU,aAAd,gBACA,uBAAK9B,MAAO,CACV+B,UAAU,WAEV,uBAAKC,IAAKH,KAEZ,sDACA,gBAAC,IAAD,CAAcxC,KAAMA","file":"component---src-pages-spec-tsx-deae1ede4a9594e03a9f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nconst IndexSummary = ({ data }) =>(\n  <>\n    {data.allMarkdownRemark.group.sort((a, b) => b.totalCount - a.totalCount).map(({ tag, edges }) => (\n      <article key={tag}>\n        <h1 style={{\n          fontSize: `1.3rem`,\n          margin: `1.5rem 0 1rem`\n        }}>{tag}</h1>\n        <section style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `flex-start`,\n        }}>\n          {edges.map(({ node }) => (\n            <article key={node.frontmatter.slug}>\n              <div style={{\n                width: `320px`,\n                margin: `0 0.5rem 0.25rem`\n              }}>\n                <Link to={node.frontmatter.slug} style={{\n                  display: `inline-block`,\n                  textDecoration: `none`,\n                  margin: `0 0 1rem`\n                }}>\n                  <figure style={{\n                    margin: `0 0 0.5rem`\n                  }}>\n                    {node.frontmatter.cover &&\n                      <GatsbyImage image={node.frontmatter.cover.childImageSharp.gatsbyImageData} style={{\n                        borderRadius: `8px`,\n                        verticalAlign: `bottom`\n                      }} alt=\"\" />\n                    }\n                  </figure>\n                  <h2 style={{\n                    color: `#000`,\n                    fontSize: `0.9rem`,\n                    lineHeight: `1.2rem`,\n                    margin: 0,\n                  }}>\n                    {node.frontmatter.title}\n                  </h2>\n                  <time dateTime={node.frontmatter.date} style={{\n                    fontSize: `0.7rem`,\n                    color: `#666`,\n                  }}>{node.frontmatter.date}</time>\n                </Link>\n              </div>\n            </article>\n          ))}\n        </section>\n      </article>\n    ))}\n  </>\n)\n\nIndexSummary.propTypes = {\n  data: PropTypes.object,\n}\n\nIndexSummary.defaultProps = {\n  data: {},\n}\n\nexport default IndexSummary\n","export default __webpack_public_path__ + \"static/spec-7bb5432a4e45c9486d9523cdb0537069.jpg\";","import React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Visual from \"./imgs/spec.jpg\"\nimport IndexSummary from \"../components/index-summary\"\n\nconst Spec: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"原付改造インプレッション\" visual={Visual} />\n    <h1 className=\"pageTitle\">原付改造インプレッション</h1>\n    <div style={{\n      textAlign: `center`,\n    }}>\n      <img src={Visual} />\n    </div>\n    <p>ひろZX/とだディオ/ひろディオの改造スペックです</p>\n    <IndexSummary data={data} />\n  </Layout>\n)\n\nexport default Spec\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: {fields: [frontmatter___date], order: DESC}\n      filter: {frontmatter: {tags: {in: [\n        \"改造インプレッション\",\n      ]}}}\n    ) {\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        edges {\n          node {\n            frontmatter {\n              title\n              slug\n              date(formatString: \"YYYY年M月D日\")\n              cover {\n                childImageSharp {\n                  gatsbyImageData(layout: FIXED, width: 320, height: 240)\n                }\n              }\n            }\n          }\n        },\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}